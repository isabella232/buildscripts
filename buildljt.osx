set -u
set -e

SCRIPTDIR=`dirname $0`

if ls $OUTDIR/files/libjpeg-turbo-[0-9]*.dmg >/dev/null 2>&1; then
	if [ $FORCEBINARY = 0 ]; then
		>&2 echo
		>&2 echo Binary already exists!
		>&2 echo Run $SCRIPT -fb to rebuild it.
		>&2 echo
		exit 1
	else
		rm -f $OUTDIR/files/libjpeg-turbo.dmg
	fi
fi

exec 2>&1

pushd libjpeg-turbo-[0-9]*

mkdir osxx86
pushd osxx86
sh $SCRIPTDIR/setupscripts/osxx86
export NUMCPUS=`sysctl -n hw.ncpu`
make -j$NUMCPUS --load-average=$NUMCPUS
make test FLOATTEST=sse
popd

mkdir iosarmv7
pushd iosarmv7
sh $SCRIPTDIR/setupscripts/iosarmv7
make -j$NUMCPUS --load-average=$NUMCPUS
popd

mkdir iosarmv7s
pushd iosarmv7s
sh $SCRIPTDIR/setupscripts/iosarmv7s
make -j$NUMCPUS --load-average=$NUMCPUS
popd

mkdir iosarmv8
pushd iosarmv8
sh $SCRIPTDIR/setupscripts/iosarmv8
make -j$NUMCPUS --load-average=$NUMCPUS
popd

mkdir osxx8664
pushd osxx8664
sh $SCRIPTDIR/setupscripts/osxx8664
make -j$NUMCPUS --load-average=$NUMCPUS
make test FLOATTEST=sse
make iosdmg
mv libjpeg-turbo-[0-9]*.dmg $OUTDIR/files/
lipo -create -arch i386 ../osxx86/.libs/libturbojpeg.dylib -arch x86_64 .libs/libturbojpeg.dylib -output libturbojpeg.jnilib
jar cvf $OUTDIR/files/jni/ljtosx.jar -C . libturbojpeg.jnilib
popd

popd
